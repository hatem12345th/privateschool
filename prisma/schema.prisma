datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique
  age        Int
  classId    Int?
  class      Class?       @relation(fields: [classId], references: [id])
  attendance Attendance[]
  payments   Payment[]
}

model Teacher {
  id      Int      @id @default(autoincrement())
  name    String
  subject String
  email   String   @unique
  phone   String?
  classes Class[]
  courses Course[] // ðŸ‘ˆ added this relation
}

model Class {
  id        Int       @id @default(autoincrement())
  name      String
  teacherId Int?
  teacher   Teacher?  @relation(fields: [teacherId], references: [id])
  students  Student[]
  courses   Course[] // ðŸ‘ˆ relation to Course (opposite side defined below)
}

model Course {
  id        Int     @id @default(autoincrement())
  name      String
  credits   Int?
  teacherId Int
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  classId   Int? // ðŸ‘ˆ added this
  class     Class?  @relation(fields: [classId], references: [id]) // ðŸ‘ˆ opposite side for Class
}

model Attendance {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  status    String
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id])
}

model Payment {
  id        Int      @id @default(autoincrement())
  amount    Float
  date      DateTime @default(now())
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id])
}

model Staff {
  id   Int    @id @default(autoincrement())
  name String
  role String
}
